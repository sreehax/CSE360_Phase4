import java.io.IOException;
import java.sql.SQLException;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.TextField;
import javafx.scene.text.Text;
import javafx.stage.Stage;
/**
 * Controller class for the delete confirmation dialog.
 * This class handles user input related to the deletion of a user account,
 * including confirming the deletion and navigating back to the admin login page.
 */
public class DeleteConfirmationController {
	private Stage stage;
	private Scene scene;
	private Parent root;
	private Storage storage;
	private String username;
	/** TextField where the user must type "Yes" to confirm deletion. */
	@FXML
	private TextField dc_confirmtxtBox;
	/**
     * Sets the username of the account to be deleted.
     * This method is called to specify which user account will be deleted.
     *
     * @param name The username of the account to be deleted.
     */
	public void userName(String name) {
		this.username = name;
		
	}
	/**
     * Handles the event triggered by the "Back" button.
     * This method takes the user back to the Admin Login page without making any changes.
     *
     * @param event The action event generated by clicking the back button.
     * @throws IOException If the FXML file for the AdminLogin scene cannot be loaded.
     */
	@FXML
	public void dc_backClicked(ActionEvent event) throws IOException {
		// Load the AdminLogin.fxml file and switch back to the admin login scene
		FXMLLoader loader = new FXMLLoader(getClass().getResource("AdminLogin.fxml"));
		root = loader.load();
		
        stage = (Stage)((Node)event.getSource()).getScene().getWindow();
        scene = new Scene(root);
        stage.setScene(scene);
        stage.show();
	}
	/**
     * Handles the event triggered by the "Confirm" button.
     * This method verifies that the user has typed "Yes" in the confirmation box
     * and then proceeds to delete the specified user account from the system.
     *
     * @param event The action event generated by clicking the confirm button.
     * @throws IOException If there is an issue loading the AdminLogin scene after deletion.
     */
	@FXML
	public void dc_confirmbuttonClicked(ActionEvent event) throws IOException, SQLException {
		String input = this.dc_confirmtxtBox.getText();
		
		if (!input.equals("Yes")) {
			System.out.println("You must type in 'Yes' to delete!");
			return;
		}
		
		this.stage = (Stage)((Node)event.getSource()).getScene().getWindow();
		this.storage = (Storage) stage.getUserData();
		      // Attempt to delete the user from storage, handling potential SQL exceptions
		try {
			this.storage.deleteUser(this.username);
			System.out.println("Deleted user " + this.username + " successfully!");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		// After deletion, return to the AdminLogin.fxml scene
		FXMLLoader loader = new FXMLLoader(getClass().getResource("AdminLogin.fxml"));
		root = loader.load();
		
		//pass in username so admin is still logged in
		
		
        stage = (Stage)((Node)event.getSource()).getScene().getWindow();
        scene = new Scene(root);
        stage.setScene(scene);
        stage.show();
	}
}
